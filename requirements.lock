#
# XXX: ALWAYS save a lock file when modifying requirements:
#     pip3 freeze -r requirements.txt > requirements.lock
numpy==1.26.3
PyYAML==6.0.1
wandb==0.16.6
gymnasium==0.29.1
onnx-pytorch==0.1.5
#ray == 2.9.0
ray==2.9.0

# Nightly ray builds
#ray @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp312-cp312-manylinux2014_x86_64.whl
#ray[tune] @ https://s3-us-west-2.amazonaws.com/ray-wheels/latest/ray-3.0.0.dev0-cp312-cp312-manylinux2014_x86_64.whl
# Manually uncomment one of the torch packages -- see comment below
#torch
#torch @ https://download.pytorch.org/whl/cpu-cxx11-abi/torch-2.3.1%2Bcpu.cxx11.abi-cp312-cp312-linux_x86_64.whl
# Python's "torch" package is *not* compiled with CXX11 ABI flag by default.
# - on macOS there is no issue (CXX11 ABI is not used there)
# - on linux, VCMI is CXX11 ABI, and torch are incompatible, so a special cxx11.abi version of torch is needed
# ref. https://github.com/pytorch/pytorch/issues/51039#issuecomment-2111849591
# Choose which torch you want based on your needs:
# a) default torch package (non-CXX11 ABI)
# - macOS users should always choose this option
# - linux users should choose this option if they need CUDA (for GPU training)
#   and won't be using VCMI for loading pre-trained models to play against.
#   VCMI must be compiled with ENABLE_LIBTORCH=0 in this case.
# b) URL-specified torch package (CXX11 ABI)
# - linux users should choose this option if they are ok with CPU-only training
#   and want to use VCMI for loading pre-trained models to play against.
#   URL must be modified based on your python version.
## The following requirements were added by pip freeze:
absl-py==2.0.0
aiosignal==1.3.1
appdirs==1.4.4
astunparse==1.6.2
attrs==23.1.0
build==1.0.3
cachetools==5.3.2
certifi==2023.11.17
charset-normalizer==3.3.1
click==8.1.7
cloudpickle==3.0.0
coloredlogs==15.0.1
contourpy==1.2.0
cycler==0.12.1
Cython==3.0.4
decorator==5.1.1
docker-pycreds==0.4.0
docstring-parser==0.15
exceptiongroup==1.2.1
Farama-Notifications==0.0.4
filelock==3.13.1
flatbuffers==23.5.26
fonttools==4.47.2
frozenlist==1.4.0
fsspec==2023.12.2
gast==0.5.4
gitdb==4.0.11
GitPython==3.1.40
google-auth==2.23.3
google-auth-oauthlib==1.0.0
google-pasta==0.2.0
GPy==1.10.0
grpcio==1.59.2
h5py==3.10.0
humanfriendly==10.0
idna==3.4
iniconfig==2.0.0
Jinja2==3.1.3
joblib==1.3.2
json5==0.9.14
jsonschema==4.19.2
jsonschema-specifications==2023.7.1
keras==2.14.0
kiwisolver==1.4.5
libclang==16.0.6
Markdown==3.5.1
markdown-it-py==3.0.0
MarkupSafe==2.1.4
matplotlib==3.8.2
mdurl==0.1.2
ml-dtypes==0.2.0
mpmath==1.3.0
msgpack==1.0.7
networkx==3.2.1
oauthlib==3.2.2
onnx==1.16.0
onnxruntime==1.17.3
opt-einsum==3.3.0
packaging==23.2
pandas==2.2.0
paramz==0.9.5
pillow==10.2.0
pip-tools==7.3.0
pipdeptree==2.16.2
pluggy==1.5.0
protobuf==4.23.4
psutil==5.9.7
pyarrow==13.0.0
pyasn1==0.5.0
pyasn1-modules==0.3.0
Pygments==2.16.1
pyparsing==3.1.1
pyproject_hooks==1.0.0
pytest==8.2.0
python-dateutil==2.8.2
pytz==2023.3.post1
referencing==0.30.2
requests==2.31.0
requests-oauthlib==1.3.1
rich==13.6.0
rpds-py==0.10.6
rsa==4.9
sb3-contrib==2.1.0
scikit-learn==1.3.2
scipy==1.11.3
sentry-sdk==1.39.1
setproctitle==1.3.3
shtab==1.6.5
six==1.16.0
smmap==5.0.1
stable-baselines3==2.1.0
sympy==1.12
tensorboard==2.14.0
tensorboard-data-server==0.7.2
tensorboardX==2.6.2.2
tensorflow==2.14.0
tensorflow-estimator==2.14.0
tensorflow-io-gcs-filesystem==0.34.0
tensorflow-macos==2.14.0
termcolor==2.4.0
threadpoolctl==3.2.0
tomli==2.0.1
torch==2.1.2
torchvision==0.16.2
tqdm==4.66.1
typing_extensions==4.9.0
tyro==0.7.3
tzdata==2023.4
urllib3==2.1.0
Werkzeug==3.0.0
wrapt==1.14.1
