---
group_id: heads-vs-classic
run_name: "[C] ResNet"
tags: ["Classic", "ResNet", "Map-3stack-01"]

wandb_project: vcmi-gym
run_id: ~
resume: False
overwrite: []
# overwrite: ["learning_rate", "weight_decay"]

notes: ""

agent_load_file: ~
# agent_load_file: "data/crl/mult-sanity-clone3-armyswap-attacker-mb2-lr0.000001/agent-1711337191.zip"
rollouts_total: 0
timesteps_total: 0  # exp_decay requires timesteps_total
timesteps_per_mapchange: 0
rollouts_per_mapchange: 0
rollouts_per_log: 1
rollouts_per_table_log: 0
opponent_load_file: ~
success_rate_target: ~
ep_rew_mean_target: 0
quit_on_target: false
mapside: "attacker"  # attacker/defender/both
mapmask: "gym/generated/88/88-3stack-01.vmap"
randomize_maps: false
save_every: 3600  # seconds
max_saves: 3
out_dir_template: "data/{group_id}/{run_id}"

# SBM = StupidAI, BattleAI, MMAI_MODEL
opponent_sbm_probs: [1, 0, 0]
opponent_load_file: ~

# XXX: 21 envs require 256+ filehandles (and 256 is the limit by default)
#      To increase (current shell session only):
#           ulimit -n 1024
num_envs: 1


#
# PPO Hyperparams
#

clip_coef: 0.4
clip_vloss: false
ent_coef: 0.007
gae_lambda: 0.8
gamma: 0.8425
lr_schedule: { mode: const, start: 1.0e-5, end: 1.0e-5, rate: 10 }
max_grad_norm: 0.5
norm_adv: true
num_minibatches: 2   # minibatch_size = rollout_buffer/num_minibatches
num_steps: 128       # rollout_buffer = num_steps*num_envs
update_epochs: 10    # full passes of rollout_buffer
vf_coef: 1.2
weight_decay: 0

env:
  reward_dmg_factor: 5
  step_reward_fixed: -100
  step_reward_mult: 1
  term_reward_mult: 0
  reward_clip_tanh_army_frac: 1
  reward_army_value_ref: 500
  random_combat: true

env_wrappers: []
logparams: {}
