PRE-features extractor, state_dicts are the same
POST-features extractor, state_dicts (running_mean) differ:

### original (pre):

('1.running_mean', tensor([ 0.0218, -0.0098,  0.0457,  0.0313,  0.0205,  0.0288,  0.0430, -0.0093,
     ...0609,  0.0482, -0.0077, -0.0110, -0.0300])), ('1.running_var', tensor([0.9019, 0.9025, 0.9028, 0.9026, 0.9030, 0.9036, 0.9028, 0.9024, 0.9027,
     ...  0.9029, 0.9031, 0.9026, 0.9028, 0.9031])), ('1.num_batches_tracked', tensor(1)), ('4.weight', tensor([[-2.9712e-02, -1.4597e-02,  7.2188e-03,  ...,  2.8752e-03,
         -4.0833e-...e-02,
          3.7337e-02, -9.9384e-03]]))

### post (sb3):

('1.running_mean', tensor([ 0.0218, -0.0098,  0.0457,  0.0313,  0.0205,  0.0288,  0.0430, -0.0093,
     ...0609,  0.0482, -0.0077, -0.0110, -0.0300])), ('1.running_var', tensor([0.9019, 0.9025, 0.9028, 0.9026, 0.9030, 0.9036, 0.9028, 0.9024, 0.9027,
     ...  0.9029, 0.9031, 0.9026, 0.9028, 0.9031])), ('1.num_batches_tracked', tensor(1)), ('4.weight', tensor([[-2.9712e-02, -1.4597e-02,  7.2188e-03,  ...,  2.8752e-03,
         -4.0833e-...e-02,
          3.7337e-02, -9.9384e-03]]))

### post (crl):

('1.running_mean', tensor([ 0.0280, -0.0274,  0.0081,  0.0126,  0.0294,  0.0254,  0.0376, -0.0025,
     ...0365,  0.0549, -0.0168, -0.0140, -0.0376])), ('1.running_var', tensor([0.8193, 0.8176, 0.8150, 0.8155, 0.8151, 0.8138, 0.8131, 0.8136, 0.8153,
     ...  0.8135, 0.8131, 0.8134, 0.8149, 0.8135])), ('1.num_batches_tracked', tensor(2)), ('4.weight', tensor([[-2.9712e-02, -1.4597e-02,  7.2188e-03,  ...,  2.8752e-03,
         -4.0833e-...e-02,
          3.7337e-02, -9.9384e-03]]))


##############
BATCHNORM LAYER behaves differently in sb3 and crl:
in SB3, state_dict() does not change
in CRL, state_dict() CHANGES

Reason:
SB3 uses model.eval() during the collect_rollouts
CRL is always in training mode

According to Chat GPT, it is better to keep it in training mode...
but is that what makes CRL behave worse in my sanity trainings?

###################### TODO
###################### research if agent.eval() during collect_rollouts is OK

I will start session3 by changing CRL to use eval() during rollout collection
to see if there are other differences in the algo logic

# see also sb3-script.py
